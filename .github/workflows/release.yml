name: Release

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release Management
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Environment
        uses: ./.github/actions/setup
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: npm run release
          title: "chore: release packages"
          commit: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          release_name: Release v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          body: |
            ## Changes
            
            ${{ steps.changesets.outputs.changelog }}
            
            ## Deployment
            
            This release will be automatically deployed to production.
          draft: false
          prerelease: false 